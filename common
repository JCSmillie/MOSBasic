#!/bin/zsh
#
#MOSBasic 
#
#   __  __  ____   _____ ____            _      
#  |  \/  |/ __ \ / ____|  _ \          (_)     
#  | \  / | |  | | (___ | |_) | __ _ ___ _  ___ 
#  | |\/| | |  | |\___ \|  _ < / _` / __| |/ __|
#  | |  | | |__| |____) | |_) | (_| \__ \ | (__ 
#  |_|  |_|\____/|_____/|____/ \__,_|___/_|\___|
#
# This file is dedicated to functions which could be called
# across the board through out all commands.

#
################################
#          FUNCTIONS           #
################################
cli_log() {
	LINE=$1
	TODAY=`date '+%a %x %X'`
	#Print on stdout
	echo "$TODAY =====>$LINE"
	#Log to file
	echo "$CMDRAN ++> $TODAY =====> $LINE" >> $LOG
}

cli_graffitti() {
	echo "${Cyan}"
	echo '   __  __  ____   _____ ____            _       '
	echo '  |  \/  |/ __ \ / ____|  _ \          (_)      '
	echo '  | \  / | |  | | (___ | |_) | __ _ ___ _  ___  '
	echo '  | |\/| | |  | |\___ \|  _ < / _` / __| |/ __| '
	echo '  | |  | | |__| |____) | |_) | (_| \__ \ | (__  '
	echo '  |_|  |_|\____/|_____/|____/ \__,_|___/_|\___| '
	echo "${reset}"
	

}

ParseIt_ios() {
	UDID=$(echo "$line" | cut -f 1 -d$'\t')
	DeviceSerialNumber=$(echo "$line" | cut -f 2 -d$'\t')
	CURRENTNAME=$(echo "$line" | cut -f 3 -d$'\t')
	TAGS=$(echo "$line" | cut -f 4 -d$'\t')
	ASSETTAG=$(echo "$line" | cut -f 5 -d$'\t')
	LASTCHECKIN=$(echo "$line" | cut -f 6 -d$'\t')
	ENROLLMENT_TYPE=$(echo "$line" | cut -f 7 -d$'\t')
	USERID=$(echo "$line" | cut -f 8 -d$'\t')
	NAME=$(echo "$line" | cut -f 9 -d$'\t')
	
	#Take Epoch time and convert to hours
	LASTCHECKIN=$($PYTHON2USE -c "import datetime; print(datetime.datetime.fromtimestamp(int("$LASTCHECKIN")).strftime('%Y-%m-%d %I:%M:%S %p'))")
}

ParseIt_group() {
	GRPID=$(echo "$line" | cut -f 1 -d$'\t')
	GRPNAME=$(echo "$line" | cut -f 2 -d$'\t')
	GRPNUMOFMEMBS=$(echo "$line" | cut -f 3 -d$'\t')
}

SerialFromTag() {
	#Search through our known serials
	SERIALIS=$(cat "$TEMPOUTPUTFILE_MERGEDIOS" | cut -d$'\t' -f 2-5,7-9 | grep "$TAG_GIVEN" | cut -d$'\t' -f 1 )
	SERIALIS=$(cat "$TEMPOUTPUTFILE_MERGEDIOS" | grep "$SERIALIS")
	
	#echo "DEBUG--> $SERIALIS"
	if [ ! -z "$SERIALIS" ]; then
		
		line="$SERIALIS"
		ParseIt_ios
		
		# echo "${Red}--------------------------------------------------${reset}"
		# echo "${Blue}UDID=${Green}$UDID${reset}"
		# echo "${Blue}DeviceSerialNumber=${Green}$DeviceSerialNumber${reset}"
		# echo "${Blue}CURRENTNAME=${Green}$CURRENTNAME${reset}"
		# echo "${Blue}TAGS=${Green}$TAGS${reset}"
		# echo "${Blue}ASSET TAG=${Green}$ASSETTAG${reset}"
		# echo "${Blue}LASTCHECKIN=${Green}$LASTCHECKIN${reset}"
		# echo "${Blue}ENROLLMENT_TYPE=${Green}$ENROLLMENT_TYPE${reset}"
		# echo "${Blue}USERID=${Green}$USERID${reset}"
		# echo "${Blue}ASSIGNED TO=${Green}$NAME${reset}"
		# echo "${Red}--------------------------------------------------${reset}"
		
		RETURNSERIAL="$DeviceSerialNumber"
		#echo "DEBUG--> $RETURNSERIAL"

	else
		cli_log "Attempted to find serial for tag #$TAG_GIVEN and failed."
		RETURNSERIAL="EPICFAIL"
	fi

}

#Ask Mosyle if a specific serial # is a Shared Mode iPad
IsThisiPadSharedMode() {
	#Our query.  We are asking for a specific serial # and only asking back for UDID, Serial and enrollment type
	content="{\"accessToken\":\"$APIKey\",\"options\":{\"os\":\"ios\",\"serial_numbers\":[\"$DeviceSerialNumber\"],\"specific_columns\":\"deviceudid,serial_number,enrollment_type\"}}"

	#Do the Query
	output=$(curl -s -k -X POST -d 'content='$content 'https://managerapi.mosyle.com/v2/listdevices')

	if echo "$output" | grep SHARED; then
		echo "This is a Shared iPad."
		ISSHARED="TRUE"
	else
		ISSHARED="FALSE"
	fi
}

#ColorCodes

#Make sure TERM variable is set.
[[ ${TERM}=="" ]] && TPUTTERM='-Txterm-256color' \
                  || TPUTTERM=''

#Define colors
Red=`tput ${TPUTTERM} setaf 1`
Green=`tput ${TPUTTERM} setaf 2`
Yellow=`tput ${TPUTTERM} setaf 3`
Blue=`tput ${TPUTTERM} setaf 4`
Magenta=`tput ${TPUTTERM} setaf 5`
Cyan=`tput ${TPUTTERM} setaf 6`
White=`tput ${TPUTTERM} setaf 7`
reset=`tput ${TPUTTERM} sgr0`
